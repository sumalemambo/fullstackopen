{"ast":null,"code":"var _jsxFileName = \"/home/epsilon/Desktop/dev/fullstackopen/part1/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/*\n\n# Components\n\nIn javascript the following is a function that\ndoes not receive parameters\n\n() => (\n  <div>\n    <p>Hello world</p>\n  </div>\n)\n\nthe function is then assigned to a constant variable\ncalled App\n\nWe will modify the following fuction\n\nconst App = () => (\n  <div>\n    <p>Hello world</p>\n  </div>\n)\n\nto\n\nconst App = () => {\n  console.log('Hello from component')\n  return (\n    <div>\n      <p>Hello world</p>\n    </div>\n  )\n}\n\nIt is also possible to render dynamic content on the\ncomponent as follows\n\nconst App = () => {\n  const now = new Date()\n  const a = 10\n  const b = 20\n\n  return (\n    <div>\n      <p>Hello World, it is {now.toString()}</p>\n      <p>\n        {a} plus {b} is {a + b}\n      </p>\n    </div>\n  )\n\n# JSX\n\nIt seems like React components are returning HTML Markup. However,\nthat is not the case. The layout of React applications is mostly\nwritten using JSX. Under the hood, JSX returned by React components\nis compiled into Javascript.\n\nAfter compiling our code looks like this\n\nconst App = () => {\n  const now = new Date()\n  const a = 10\n  const b = 20\n  return React.createElement(\n    'div',\n    null,\n    React.createElement(\n      'p', null, 'Hello world, it is ', now.toString()\n    ),\n    React.createElement(\n      'p', null, a, ' plus ', b, ' is ', a + b\n    )\n  )\n}\n\n# Multiple components\n\nL\n\nconst Hello = () => {  return (    <div>      <p>Hello world</p>    </div>  )}\nconst App = () => {\n  return (\n    <div>\n      <h1>Greetings</h1>\n      <Hello />    </div>\n  )\n}\n\n*/\n\nconst App = () => {\n  const now = new Date();\n  const a = 10;\n  const b = 20;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hello World, it is \", now.toString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [a, \" plus \", b, \" is \", a + b]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","now","Date","a","b","toString"],"sources":["/home/epsilon/Desktop/dev/fullstackopen/part1/src/App.js"],"sourcesContent":["/*\n\n# Components\n\nIn javascript the following is a function that\ndoes not receive parameters\n\n() => (\n  <div>\n    <p>Hello world</p>\n  </div>\n)\n\nthe function is then assigned to a constant variable\ncalled App\n\nWe will modify the following fuction\n\nconst App = () => (\n  <div>\n    <p>Hello world</p>\n  </div>\n)\n\nto\n\nconst App = () => {\n  console.log('Hello from component')\n  return (\n    <div>\n      <p>Hello world</p>\n    </div>\n  )\n}\n\nIt is also possible to render dynamic content on the\ncomponent as follows\n\nconst App = () => {\n  const now = new Date()\n  const a = 10\n  const b = 20\n\n  return (\n    <div>\n      <p>Hello World, it is {now.toString()}</p>\n      <p>\n        {a} plus {b} is {a + b}\n      </p>\n    </div>\n  )\n\n# JSX\n\nIt seems like React components are returning HTML Markup. However,\nthat is not the case. The layout of React applications is mostly\nwritten using JSX. Under the hood, JSX returned by React components\nis compiled into Javascript.\n\nAfter compiling our code looks like this\n\nconst App = () => {\n  const now = new Date()\n  const a = 10\n  const b = 20\n  return React.createElement(\n    'div',\n    null,\n    React.createElement(\n      'p', null, 'Hello world, it is ', now.toString()\n    ),\n    React.createElement(\n      'p', null, a, ' plus ', b, ' is ', a + b\n    )\n  )\n}\n\n# Multiple components\n\nL\n\nconst Hello = () => {  return (    <div>      <p>Hello world</p>    </div>  )}\nconst App = () => {\n  return (\n    <div>\n      <h1>Greetings</h1>\n      <Hello />    </div>\n  )\n}\n\n*/\n\nconst App = () => {\n  const now = new Date()\n  const a = 10\n  const b = 20\n\n  return (\n    <div>\n      <p>Hello World, it is {now.toString()}</p>\n      <p>\n        {a} plus {b} is {a + b}\n      </p>\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,GAAG,GAAG,MAAM;EAChB,MAAMC,GAAG,GAAG,IAAIC,IAAI,EAAE;EACtB,MAAMC,CAAC,GAAG,EAAE;EACZ,MAAMC,CAAC,GAAG,EAAE;EAEZ,oBACE;IAAA,wBACE;MAAA,kCAAuBH,GAAG,CAACI,QAAQ,EAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAC1C;MAAA,WACGF,CAAC,YAAQC,CAAC,UAAMD,CAAC,GAAGC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACpB;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEV,CAAC;AAAA,KAbKJ,GAAG;AAeT,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}